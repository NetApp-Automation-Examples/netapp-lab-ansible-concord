---
- name: Seemingly Ranch   
  hosts: "{{ ansible_limit }}"
  gather_facts: no
  connection: 'local'
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname: "{{ ontap_hostname }}"
      username: "{{ ontap_username }}"
      password: "{{ ontap_password }}"
      https: "{{ https }}"
      validate_certs: "{{ validate_certs }}"
  tasks:
  - name: Get cluster mgmt LIF(s)
    include_tasks: tasks/ontap_get_cluster_info_rest.yml
    vars: 
      gather_subset: 
        - cluster
        #- vserver_info
      parameters:
        fields: ['management_interfaces']

  - name: Set ontap_mgmt_lifs fact
    ansible.builtin.set_fact: 
      ontap_mgmt_lifs: "{{ ontap_rest_info['cluster']['management_interfaces'] | map(attribute='ip') | map(attribute='address') }}"

  - name: Validate FQDN from the first mgmt LIF via nslookup
    ansible.builtin.shell:  "nslookup {{ ontap_mgmt_lifs | first }}"
    register: nslookup 

  - name: Log of nslookup
    ansible.builtin.debug: 
      var: nslookup.stdout 

  - name: "Verify {{ ontap_hostname }} is in nslookup results"
    ansible.builtin.fail:
      msg: "{{ ontap_hostname }} is not in {{ nslookup.stdout }}, therefore the common name will be incorrect on the certificate."
    when: ontap_hostname not in nslookup.stdout

  - name: Get SVM name / LIF info
    include_tasks: tasks/ontap_get_cluster_info_rest.yml
    vars: 
      gather_subset: 
        - svm/svms
      parameters:
        state: running
        fields: ['ip_interfaces']

  - name: Set svms fact
    ansible.builtin.set_fact: 
      svms: "{{ ontap_rest_info['svm/svms']['records'] }}"
      
  - name: Set svm_fqdns and svm_mgmt_lifs fact
    ansible.builtin.set_fact: 
      svm_fqdns: "{{ svms | map(attribute='name') | product(['.'+ontap_base_domain]) | map('join') | list }}"
      svm_mgmt_lifs: "{{ svm_mgmt_lifs | default([]) + item | selectattr('services', 'contains', 'management_https') | map(attribute='ip') | map(attribute='address') }}"
    loop: "{{ svms | map(attribute='ip_interfaces' ) }}"
    loop_control:
      label: "{{ item | map(attribute='name') }}"

  - name: Get Node name / LIF info
    include_tasks: tasks/ontap_get_cluster_info_rest.yml
    vars: 
      gather_subset: 
        - cluster/nodes
      parameters:
        fields: ['management_interfaces']

  - name: Set nodes fact
    ansible.builtin.set_fact:
      nodes: "{{ ontap_rest_info['cluster/nodes']['records'] }}"

  - name: Set node_fqdns and node_mgmt_lifs
    ansible.builtin.set_fact: 
      node_fqdns: "{{ nodes | map(attribute='name') | product(['.'+ontap_base_domain]) | map('join') | list }}"
      node_mgmt_lifs: "{{ node_mgmt_lifs | default([]) + item | map(attribute='ip') | map(attribute='address') }}"
    loop: "{{ nodes | map(attribute='management_interfaces' ) }}"
    loop_control:
      label: "{{ item | map(attribute='name') }}"

  - name: Set CSR vars 
    ansible.builtin.set_fact:
      csr: 
        common_name: "{{ ontap_hostname }}"
        san: "{{ ontap_mgmt_lifs + node_fqdns + node_mgmt_lifs + svm_fqdns | default([]) + svm_mgmt_lifs | default([]) }}"

  - name: Let's see what we have going on mkay
    ansible.builtin.debug:
      var: csr
