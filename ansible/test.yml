---
- name: Testing 
  hosts: "{{ ansible_limit | default('localhost') }}"
  gather_facts: yes
  connection: 'local'
  collections:
    - netapp.ontap
  module_defaults:    
    group/netapp.ontap.netapp_ontap:      
      hostname: "{{ ontap_hostname }}"
      username: "{{ ontap_username }}"
      password: "{{ ontap_password }}"
      https: "{{ https }}"
      validate_certs: "{{ validate_certs }}"
  vars: 
    node_image_no_update_in_progress: "There is no update/install in progress"
    validation_warnings: []
    nodes_need_new_image: ["cluster1-01","cluster1-02"]

    nodes_image_update_test_mock: 
      - item: cluster1-01
        msg:
          cli_output: |-
            Status of most recent operation:
                  Run Status:     Working
                  Exit Status:    Success
                  Phase:          Download
                  Exit Message:
            skipped: false
      - item: cluster1-02
        msg:
          cli_output: |-
            There is no update/install in progress
            Status of most recent operation:
                    Run Status:     Exited
                    Exit Status:    Success
                    Phase:          Download
                    Exit Message:   Software get http://.../9101P15_q_image.tgz completed on node cluster1-02.
            skipped: false

    validation_warnings_to_ignore: 
      - Manual checks
    validation_results:
      - action:
          message: Refer to the Upgrade Advisor Plan or the "What should I verify before I upgrade with or without Upgrade Advisor" section in the "Upgrade ONTAP" documentation for the remaining validation checks that need to be performed before update.
        issue:
          message: Manual validation checks need to be performed. Refer to the Upgrade Advisor Plan or the "What should I verify before I upgrade with or without Upgrade Advisor" section in the "Upgrade ONTAP" documentation for the remaining validation checks that need to be performed before update. Failing to do so can result in an update failure or an I/O disruption.
        status: warning
        update_check: Manual checks
      - action:
          message: Hello
        issue:
          message: Is it me you're looking for? 
        status: warning
        update_check: Lionel Richie

  tasks:
    - name: log of nodes_need_new_image
      ansible.builtin.debug:
        var: nodes_need_new_image
      when: nodes_need_new_image is defined
    
    - name: >
        Check on status for each node 
        system node image show-update-progress -node <node> 
      netapp.ontap.na_ontap_rest_cli: 
        command: 'system/node/image/show-update-progress'
        body: 
          node: "{{ item }}"
        verb: "POST"
      register: check_image_upload_progress
      loop: "{{ nodes_need_new_image }}"
   
    - name: Log
      ansible.builtin.debug: 
        var: check_image_upload_progress

    - name: Build list of nodes with no update in progress 
      ansible.builtin.set_fact: 
        nodes_nothing_in_progress: "{{ check_image_upload_progress.results | 
                selectattr('msg.cli_output', 'search', node_image_no_update_in_progress) | 
                map(attribute='item')}}"

    - name: Log
      ansible.builtin.debug: 
        var: nodes_nothing_in_progress

    # - name: >
    #     Check on status until success
    #     system node image -node show-update-progress
    #   netapp.ontap.na_ontap_rest_cli: 
    #     command: 'system/node/image/show-update-progress'
    #     verb: "POST"
    #   register: node_image_upload_progress

    # - name: Log
    #   ansible.builtin.debug: 
    #     var: node_image_upload_progress
      
    # - name: Log 2
    #   ansible.builtin.debug: 
    #     var: node_image_update_success_text | reject('in', node_image_upload_progress.msg.cli_output) | list 

    - meta: end_play

    - name: Get snapmirrors
      include_tasks: tasks/ontap_get_cluster_info_rest.yml
      vars: 
        gather_subset: 
          - snapmirror/relationships
        parameters:
          fields: ['*']
    
    - name: Set all_snapmirrors  
      ansible.builtin.set_fact: 
        all_snapmirrors: "{{ ontap_rest_info['snapmirror/relationships']['records'] }}"

    # Quiesece all snapmirrors 
    - name: Quiesece snapmirrors
      netapp.ontap.na_ontap_rest_cli: 
        command: 'snapmirror/quiesce' 
        params: 
          destination-path: "{{ all_snapmirrors | map(attribute='destination') | map(attribute='path') | join(',') }}"
        verb: "PATCH"
      register: quiesece_snapmirrors
    
    - name: Debug 
      ansible.builtin.debug: 
        var: quiesece_snapmirrors

  
    # Wait until all are quieseced 

    # Resume all snapmirrors 

    # Wait until all are resumed 


    # - name: Check for warnings beyond what we are expecting
    #   ansible.builtin.set_fact:
    #     validation_warnings: "{{ validation_warnings + [item] }}"
    #   loop: "{{ validation_results }}"
    #   when: item.update_check not in validation_warnings_to_ignore

    # - name: Log of validation warnings
    #   debug:
    #     msg: "{{ validation_warnings }}"

    # - name: Prompt for review if there are validation warnings that we don't expect
    #   ansible.builtin.pause:
    #     prompt: "Please review the results of cluster upgrade validation and press 
    #               ENTER to continue with the upgrade. To abort upgrade, hit ctrl+c and then 'A':
    #               \n\n----------------------------------------------\n\n
    #               {% for warning in validation_warnings %}
    #                 {{ warning.status }}: \n{{ warning.issue.message }}\n\n
    #                 {{ warning.action.message }}
    #                 \n\n----------------------------------------------\n\n

    #               {% endfor %}"
    #   when: validation_warnings | length > 0
