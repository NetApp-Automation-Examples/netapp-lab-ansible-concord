---
- name: "Given a list of LIFs, compare baseline ping test result with a new run of ping tests"
  hosts: "{{ clusters | default('localhost') }}"
  gather_facts: no
  connection: 'local'
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname: "{{ ontap_hostname }}"
      username: "{{ ontap_username }}"
      password: "{{ ontap_password }}"
      https: "{{ https }}"
      validate_certs: "{{ validate_certs }}"
  vars: 
    mock: False
    test_count: 2
    fail_threshold: 2
    ping_count: 5
    test_pause: 10
    lifs_to_ping_test: "{{ lifs_to_test[inventory_hostname] | default([]) }}"
    lifs_that_failed: []
    lifs_ping_test_results: ""
    lifs_baseline_ping_test_results: "{{ lifs_baseline_ping_test[inventory_hostname] | default([]) }}"
    lifs_diff_ping_test_results: []
  tasks:
  - name: Log of lifs to ping test
    ansible.builtin.debug: 
      msg: | 
          {% for lif in  lifs_to_ping_test %}
            - {{ lif.ip.address }} ({{ lif.name }})
          {% endfor %}
  
  - name: End playbook for host if there are no lifs to run ping tests against
    meta: end_host
    when: lifs_to_ping_test | length == 0

  - name: "{{ '(MOCK RUN, will not actually ping)' if mock == True }} For above referenced LIFs, `ping -c {{ ping_count }} <ip>` {{ test_count }} 
        times with a pause of {{ test_pause }} seconds between runs "
    ansible.builtin.script: 
      cmd: "scripts/ping_test.py {{ lifs_to_ping_test | to_json | b64encode }} \ 
          {{ ping_count }} {{ test_count }} {{ test_pause }} {{ 'mock' if mock == True }}"
    register: lif_ping_test_return

  - name: Set lif_ping_test_results fact
    ansible.builtin.set_fact: 
      lif_ping_test_results: "{{ lif_ping_test_return.stdout }}"

  - name: Set lifs_that_failed fact
    ansible.builtin.set_fact: 
      lifs_that_failed: "{{ lif_ping_test_results | selectattr('failed_pings', 'ge', fail_threshold) }}"
      lifs_that_ping: "{{ lif_ping_test_results | selectattr('failed_pings', 'lt', fail_threshold) }}"
  
  - name: Set lifs_ping_test_results
    ansible.builtin.set_fact: 
      lifs_ping_test_results:
        failed: 
          count: "{{ lifs_that_failed | length }}"
          records: "{{ lifs_that_failed }}"
        passed: 
          count: "{{ lifs_that_ping | length }}"
          records: "{{ lifs_that_ping }}"
      
  - name: Set lifs_baseline_ping_test_results if this is the first run
    ansible.builtin.set_fact: 
      lifs_baseline_ping_test_results: "{{ lifs_ping_test_results }}"
    when: lifs_baseline_ping_test_results | length == 0

  - name: Baseline test failures vs current test failures
    ansible.builtin.debug:
      msg: "baseline = {{ lifs_baseline_ping_test_results.failed.count }} current test = {{ lifs_ping_test_results.failed.count }}"

  - name: If the baseline == latest test run, end run for the host
    ansible.builtin.meta: end_host 
    when: lifs_ping_test_results == lifs_baseline_ping_test_results

  - name: Log of lifs_ping_test_results
    ansible.builtin.debug: 
      var: lifs_ping_test_results

  - name: Log of lifs_baseline_ping_test_results
    ansible.builtin.debug: 
      var: lifs_baseline_ping_test_results

  - name: Log of checksums
    ansible.builtin.debug: 
      msg: |
        baseline = {{lifs_baseline_ping_test_results | checksum }}

        current = {{lifs_ping_test_results | checksum }}

  - name: If baseline is different from the latest run, set lifs_test_results_diff 
    block: 
    - name: Log of diff
      ansible.builtin.debug: 
        msg: |
          Baseline failed pings ({{ lifs_baseline_ping_test_results.failed.count }}):
          {% for fail in lifs_baseline_ping_test_results.failed.records %}
            {{ fail.ip.address }} - {{ fail.name }}
          {% endfor %}

          Latest failed pings ({{ lifs_ping_test_results.failed.count }}):"
          {% for fail in lifs_ping_test_results.failed.records %}
            {{ fail.ip.address }} - {{ fail.name }}
          {% endfor %}

    - name: Set lifs_ping_test_diff
      ansible.builtin.set_fact:
        lifs_diff_ping_test_results:
          failed: 
            diff_count: "{{ lifs_ping_test_results.failed.count | int - lifs_baseline_ping_test_results.failed.count | int }}"
            diff_records: "{{ lifs_ping_test_results.failed.records | difference(lifs_baseline_ping_test_results.failed.records) }}"

    - name: Log of lifs_diff_ping_test_results
      ansible.builtin.debug:
        var: lifs_diff_ping_test_results
    #- name: set lifs_test_results_diff

    - name: Show in git diff format
      ansible.utils.fact_diff:
        before: "{{ lifs_baseline_ping_test_results.failed }}"
        after: "{{ lifs_ping_test_results.failed }}"
      register: lifs_diff_failed_ping_test_results

    - name: Log of lifs_diff_failed_ping_test_results
      ansible.builtin.debug: 
        var: lifs_diff_failed_ping_test_results

    when: lifs_ping_test_results != lifs_baseline_ping_test_results
  # Set diff var
  