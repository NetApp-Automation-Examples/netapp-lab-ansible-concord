- name: Verify failover status (`storage failover show`)  
  netapp.ontap.na_ontap_rest_cli: 
    command: 'storage/failover'
    params: 
      fields: "node,partner-name,enabled,possible,state-description"
    verb: "GET"
  register: verify_failover_status

- name: Log of verify_failover_status
  include_tasks: tasks/add_log.yml
  vars: 
    log: 
      failover_status: "{{ verify_failover_status }}"

- name: Check for any nodes where failover isn't possible
  ansible.builtin.set_fact: 
    failover_not_possible: "{{ verify_failover_status.msg.records | selectattr('possible','false') | list }}"

- name: Enable failover for any nodes where it's disabled on 4+ node clusters (later, we will ensure two node clusters are in HA mode, which automatically turns on storage failover)  
  block: 

  - name: Log of failover_not_possible
    include_tasks: tasks/add_log.yml
    vars: 
      log: 
        failover_not_possible: "{{ failover_not_possible }}"

  - name: Enable storage failover
    netapp.ontap.na_ontap_storage_failover:
      state: present
      node_name: "{{ failover_not_possible | map(attribute='node') | join(',') }}"
    register: enable_failover

  # - name: Enable failvoer 
  #   netapp.ontap.na_ontap_rest_cli: 
  #     command: 'storage/failover'
  #     body: 
  #       enabled: true
  #     params: 
  #       node: "{{ failover_not_possible | map(attribute='node') | join(',') }}"
  #     verb: "PATCH"
  #   register: enable_failover

  - name: Log of enable_failover
    include_tasks: tasks/add_log.yml
    vars: 
      log: 
        enable_failover: "{{ enable_failover }}"

  - name: Add failure if failover was not enabled on all nodes
    include_tasks: tasks/add_failure.yml
    args:
      apply:
        tags: health
    vars: 
      failure: 
        issue: "Failover was not sucessfully enabled on all nodes"
        details: "{{ failover_not_possible }}"
    when: enable_failover.failed == true or enable_failover.msg.num_records != failover_not_possible | length 

  when: failover_not_possible | length > 0 and cluster_node_count | int > 2
