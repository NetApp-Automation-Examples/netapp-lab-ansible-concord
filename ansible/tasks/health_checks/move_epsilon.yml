- name: For larger clusters, find epsilon (`cluster show -fields epsilon`)
  netapp.ontap.na_ontap_rest_cli: 
    command: 'cluster'
    params: 
      fields: "epsilon"
    verb: "GET"
  register: cluster_epsilon

- name: Log of cluster_epsilon
  include_tasks: tasks/add_log.yml
  vars: 
    log: 
      cluster_epsilon: "{{ cluster_epsilon.msg.records | dicts_to_table }}"

- name: Set first_node and epsilon_node facts 
  ansible.builtin.set_fact:
    last_node: "{{ cluster_epsilon.msg.records | last }}"
    epsilon_node: "{{ cluster_epsilon.msg.records |selectattr('epsilon','true') | first | default(omit) }}"

- name: Set epsilon to false, if not on last node (`cluster modify -node <epsilonnode> -epsilon false`)     
  netapp.ontap.na_ontap_rest_cli: 
    command: 'cluster'
    body: 
      epsilon: false 
    params: 
      node: "{{ epsilon_node.node }}"  
    verb: "PATCH"
  register: move_cluster_epsilon

  # Catch edge case where epsilon is not true for any node
  when: last_node.epsilon == false and epsilon_node is defined 

- name: Set epsilon to true on last node (`cluster modify -node <lastnode> -epsilon true`)     
  netapp.ontap.na_ontap_rest_cli: 
    command: 'cluster'
    body: 
      epsilon: true 
    params: 
      node: "{{ last_node.node }}"
    verb: "PATCH"
  register: move_cluster_epsilon
  when: last_node.epsilon == false

- name: Log of move_cluster_epsilon
  include_tasks: tasks/add_log.yml
  vars: 
    log: 
      cluster_epsilon_move: "{{ move_cluster_epsilon }}"
  when: last_node.epsilon == false

- name: Confirm epsilon is at last node (`cluster show -fields epsilon`)
  netapp.ontap.na_ontap_rest_cli: 
    command: 'cluster'
    params: 
      fields: "epsilon"
    verb: "GET"
  register: cluster_epsilon_confirm

- name: Log of cluster_epsilon_confirm
  include_tasks: tasks/add_log.yml
  vars: 
    log: 
      Confirm Cluster Epsilon: "{{ cluster_epsilon_confirm.msg.records | dicts_to_table }}"

- name: Fail playbook if epsilon is not at last node
  include_tasks: tasks/add_failure.yml
  vars:
    failure: 
      issue: "{{ last_node.node }} should be epsilon, but currently {{ epsilon_node.node | default('no node') }} is set as epsilon"
      details: "{{ cluster_epsilon_confirm | dicts_to_table }}"
  when: cluster_epsilon_confirm.msg.records.0.epsilon == false
