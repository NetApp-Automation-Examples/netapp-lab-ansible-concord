---
- name: Seemingly Lite Ranch   
  hosts: "{{ ansible_limit }}"
  gather_facts: no
  connection: 'local'
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname: "{{ ontap_hostname }}"
      username: "{{ ontap_username }}"
      password: "{{ ontap_password }}"
      https: "{{ https }}"
      validate_certs: "{{ validate_certs }}"
  vars: 
    test_count: 2
    fail_threshold: 2
    ping_count: 5
    test_pause: 10
    lifs_to_test: []
    lifs_that_failed: []
    # The basic role to services filter mapping is as follows: 
    #   -role data = data-core
    #   -role cluster = cluster-core
    #   -role cluster-mgmt,node-mgmt = management-core
    #   -role intercluster = intercluster-core
    lif_services: ['data-core'] 
    lif_fields: "location.home_node.name,location.home_port.name,location.port.name,\
      location.is_home,location.node.name,ip.address"
  tasks:
  - name: Get {{ lif_roles }} LIF(s) to ping tests
    include_tasks: tasks/ontap_get_cluster_info_rest.yml
    vars: 
      gather_subset: 
        - network/ip/interfaces
      parameters:
        enabled: true
        state: up
        services: "{{ lif_services | join(',') }}"
        fields: "{{ lif_fields }}"

  - name: Set lifs_to_test fact
    ansible.builtin.set_fact: 
      lifs_to_test: "{{ ontap_rest_info['network/ip/interfaces']['records'] }}"

  - name: "For {{ lifs_to_test | length }} LIFs, `ping -c {{ ping_count }} <ip>` {{ test_count }} 
        times with a pause of {{ test_pause }} seconds between runs"
    ansible.builtin.script: 
      cmd: "scripts/lif_ping_test.py {{ lifs_to_test | to_json | b64encode }} \ 
          {{ ping_count }} {{ test_count }} {{ test_pause }}"
         
    register: lif_ping_test_return

  - name: Set lif_ping_test_results fact
    ansible.builtin.set_fact: 
      lif_ping_test_results: "{{ lif_ping_test_return.stdout }}"

  - name: Set lifs_that_failed fact
    ansible.builtin.set_fact: 
      lifs_that_failed: "{{ lif_ping_test_results | selectattr('failed_pings', 'ge', fail_threshold) }}"

  - name: Fail playbook if any lif ping tests failed equal to 
          or more than {{ fail_threshold }} times
    ansible.builtin.fail: 
      msg: |
          The following LIFs failed the ping test at least {{ fail_threshold }} times: 
          {% for lif in lifs_that_failed %}
            - {{ lif.ip.address }} ({{ lif.name }}) failed {{ lif.failed_pings }} times
          {% endfor %}
    when: lifs_that_failed | length > 0
